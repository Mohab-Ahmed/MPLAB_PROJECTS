

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Fri Oct 23 21:04:06 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
     8                           	dabs	1,0x7E,2
     9  0000                     
    10                           ; Version 2.20
    11                           ; Generated 12/02/2020 GMT
    12                           ; 
    13                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    14                           ; All rights reserved.
    15                           ; 
    16                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    17                           ; 
    18                           ; Redistribution and use in source and binary forms, with or without modification, are
    19                           ; permitted provided that the following conditions are met:
    20                           ; 
    21                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    22                           ;        conditions and the following disclaimer.
    23                           ; 
    24                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    25                           ;        of conditions and the following disclaimer in the documentation and/or other
    26                           ;        materials provided with the distribution.
    27                           ; 
    28                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    29                           ;        software without specific prior written permission.
    30                           ; 
    31                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    32                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    33                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    34                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    35                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    36                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    37                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    38                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    39                           ; 
    40                           ; 
    41                           ; Code-generator required, PIC16F877A Definitions
    42                           ; 
    43                           ; SFR Addresses
    44  0000                     	;# 
    45  0001                     	;# 
    46  0002                     	;# 
    47  0003                     	;# 
    48  0004                     	;# 
    49  0005                     	;# 
    50  0006                     	;# 
    51  0007                     	;# 
    52  0008                     	;# 
    53  0009                     	;# 
    54  000A                     	;# 
    55  000B                     	;# 
    56  000C                     	;# 
    57  000D                     	;# 
    58  000E                     	;# 
    59  000E                     	;# 
    60  000F                     	;# 
    61  0010                     	;# 
    62  0011                     	;# 
    63  0012                     	;# 
    64  0013                     	;# 
    65  0014                     	;# 
    66  0015                     	;# 
    67  0015                     	;# 
    68  0016                     	;# 
    69  0017                     	;# 
    70  0018                     	;# 
    71  0019                     	;# 
    72  001A                     	;# 
    73  001B                     	;# 
    74  001B                     	;# 
    75  001C                     	;# 
    76  001D                     	;# 
    77  001E                     	;# 
    78  001F                     	;# 
    79  0081                     	;# 
    80  0085                     	;# 
    81  0086                     	;# 
    82  0087                     	;# 
    83  0088                     	;# 
    84  0089                     	;# 
    85  008C                     	;# 
    86  008D                     	;# 
    87  008E                     	;# 
    88  0091                     	;# 
    89  0092                     	;# 
    90  0093                     	;# 
    91  0094                     	;# 
    92  0098                     	;# 
    93  0099                     	;# 
    94  009C                     	;# 
    95  009D                     	;# 
    96  009E                     	;# 
    97  009F                     	;# 
    98  010C                     	;# 
    99  010D                     	;# 
   100  010E                     	;# 
   101  010F                     	;# 
   102  018C                     	;# 
   103  018D                     	;# 
   104  0000                     	;# 
   105  0001                     	;# 
   106  0002                     	;# 
   107  0003                     	;# 
   108  0004                     	;# 
   109  0005                     	;# 
   110  0006                     	;# 
   111  0007                     	;# 
   112  0008                     	;# 
   113  0009                     	;# 
   114  000A                     	;# 
   115  000B                     	;# 
   116  000C                     	;# 
   117  000D                     	;# 
   118  000E                     	;# 
   119  000E                     	;# 
   120  000F                     	;# 
   121  0010                     	;# 
   122  0011                     	;# 
   123  0012                     	;# 
   124  0013                     	;# 
   125  0014                     	;# 
   126  0015                     	;# 
   127  0015                     	;# 
   128  0016                     	;# 
   129  0017                     	;# 
   130  0018                     	;# 
   131  0019                     	;# 
   132  001A                     	;# 
   133  001B                     	;# 
   134  001B                     	;# 
   135  001C                     	;# 
   136  001D                     	;# 
   137  001E                     	;# 
   138  001F                     	;# 
   139  0081                     	;# 
   140  0085                     	;# 
   141  0086                     	;# 
   142  0087                     	;# 
   143  0088                     	;# 
   144  0089                     	;# 
   145  008C                     	;# 
   146  008D                     	;# 
   147  008E                     	;# 
   148  0091                     	;# 
   149  0092                     	;# 
   150  0093                     	;# 
   151  0094                     	;# 
   152  0098                     	;# 
   153  0099                     	;# 
   154  009C                     	;# 
   155  009D                     	;# 
   156  009E                     	;# 
   157  009F                     	;# 
   158  010C                     	;# 
   159  010D                     	;# 
   160  010E                     	;# 
   161  010F                     	;# 
   162  018C                     	;# 
   163  018D                     	;# 
   164  0006                     _PORTB	set	6
   165  0086                     _TRISB	set	134
   166  0085                     _TRISA	set	133
   167                           
   168                           	psect	cinit
   169  07FC                     start_initialization:	
   170                           ; #config settings
   171                           
   172  07FC                     __initialization:
   173  07FC                     end_of_initialization:	
   174                           ;End of C runtime variable initialization code
   175                           
   176  07FC                     __end_of__initialization:
   177  07FC  0183               	clrf	3
   178  07FD  120A  118A  2F72   	ljmp	_main	;jump to C main() function
   179                           
   180                           	psect	cstackCOMMON
   181  0070                     __pcstackCOMMON:
   182  0070                     ?_main:
   183  0070                     ??_main:	
   184                           ; 1 bytes @ 0x0
   185                           
   186                           
   187                           ; 1 bytes @ 0x0
   188  0070                     	ds	3
   189  0073                     main@i:
   190                           
   191                           ; 2 bytes @ 0x3
   192  0073                     	ds	2
   193  0075                     main@i_38:
   194                           
   195                           ; 2 bytes @ 0x5
   196  0075                     	ds	2
   197  0077                     main@t:
   198                           
   199                           ; 1 bytes @ 0x7
   200  0077                     	ds	1
   201                           
   202                           	psect	maintext
   203  0772                     __pmaintext:	
   204 ;;
   205 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   206 ;;
   207 ;; *************** function _main *****************
   208 ;; Defined at:
   209 ;;		line 18 in file "main.c"
   210 ;; Parameters:    Size  Location     Type
   211 ;;		None
   212 ;; Auto vars:     Size  Location     Type
   213 ;;  i               2    5[COMMON] int 
   214 ;;  i               2    3[COMMON] int 
   215 ;;  t               1    7[COMMON] unsigned char 
   216 ;; Return value:  Size  Location     Type
   217 ;;                  1    wreg      void 
   218 ;; Registers used:
   219 ;;		wreg, status,2, status,0, btemp+1
   220 ;; Tracked objects:
   221 ;;		On entry : B00/0
   222 ;;		On exit  : 0/0
   223 ;;		Unchanged: 0/0
   224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   225 ;;      Params:         0       0       0       0       0
   226 ;;      Locals:         5       0       0       0       0
   227 ;;      Temps:          3       0       0       0       0
   228 ;;      Totals:         8       0       0       0       0
   229 ;;Total ram usage:        8 bytes
   230 ;; This function calls:
   231 ;;		Nothing
   232 ;; This function is called by:
   233 ;;		Startup code after reset
   234 ;; This function uses a non-reentrant model
   235 ;;
   236                           
   237                           
   238                           ;psect for function _main
   239  0772                     _main:
   240  0772                     l614:	
   241                           ;incstack = 0
   242                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1]
   243                           
   244                           
   245                           ;main.c: 19:     TRISA=1;
   246  0772  3001               	movlw	1
   247  0773  1683               	bsf	3,5	;RP0=1, select bank1
   248  0774  1303               	bcf	3,6	;RP1=0, select bank1
   249  0775  0085               	movwf	5	;volatile
   250  0776                     l616:
   251                           
   252                           ;main.c: 20:     TRISB=0;
   253  0776  0186               	clrf	6	;volatile
   254  0777                     l618:
   255                           
   256                           ;main.c: 21:     PORTB=0;
   257  0777  1283               	bcf	3,5	;RP0=0, select bank0
   258  0778  1303               	bcf	3,6	;RP1=0, select bank0
   259  0779  0186               	clrf	6	;volatile
   260  077A                     l620:
   261                           
   262                           ;main.c: 23:     uint8_t t=0;
   263  077A  01F7               	clrf	main@t
   264  077B                     l622:
   265                           
   266                           ;main.c: 25:     {;main.c: 26:             for(int i=0;i<48;i++)
   267  077B  01F3               	clrf	main@i
   268  077C  01F4               	clrf	main@i+1
   269  077D                     l628:
   270                           
   271                           ;main.c: 27:             {;main.c: 28:                 PORTB=(1<<t);
   272  077D  3001               	movlw	1
   273  077E  00F0               	movwf	??_main
   274  077F  0A77               	incf	main@t,w
   275  0780  2F83               	goto	u14
   276  0781                     u15:
   277  0781  1003               	clrc
   278  0782  0DF0               	rlf	??_main,f
   279  0783                     u14:
   280  0783  3EFF               	addlw	-1
   281  0784  1D03               	skipz
   282  0785  2F81               	goto	u15
   283  0786  0870               	movf	??_main,w
   284  0787  1283               	bcf	3,5	;RP0=0, select bank0
   285  0788  1303               	bcf	3,6	;RP1=0, select bank0
   286  0789  0086               	movwf	6	;volatile
   287  078A                     l630:
   288                           
   289                           ;main.c: 29:                 _delay((unsigned long)((70)*(4000000/4000.0)));
   290  078A  305B               	movlw	91
   291  078B  00F1               	movwf	??_main+1
   292  078C  30E7               	movlw	231
   293  078D  00F0               	movwf	??_main
   294  078E                     u77:
   295  078E  0BF0               	decfsz	??_main,f
   296  078F  2F8E               	goto	u77
   297  0790  0BF1               	decfsz	??_main+1,f
   298  0791  2F8E               	goto	u77
   299  0792  2F93               	nop2
   300  0793                     l632:
   301                           
   302                           ;main.c: 30:                 t++;
   303  0793  3001               	movlw	1
   304  0794  00F0               	movwf	??_main
   305  0795  0870               	movf	??_main,w
   306  0796  07F7               	addwf	main@t,f
   307  0797                     l634:
   308                           
   309                           ;main.c: 31:                 if(t==4)
   310  0797  3004               	movlw	4
   311  0798  0677               	xorwf	main@t,w
   312  0799  1D03               	btfss	3,2
   313  079A  2F9C               	goto	u21
   314  079B  2F9D               	goto	u20
   315  079C                     u21:
   316  079C  2F9E               	goto	l638
   317  079D                     u20:
   318  079D                     l636:
   319                           
   320                           ;main.c: 32:                     t=0;
   321  079D  01F7               	clrf	main@t
   322  079E                     l638:
   323                           
   324                           ;main.c: 33:             }
   325  079E  3001               	movlw	1
   326  079F  07F3               	addwf	main@i,f
   327  07A0  1803               	skipnc
   328  07A1  0AF4               	incf	main@i+1,f
   329  07A2  3000               	movlw	0
   330  07A3  07F4               	addwf	main@i+1,f
   331  07A4                     l640:
   332  07A4  0874               	movf	main@i+1,w
   333  07A5  3A80               	xorlw	128
   334  07A6  00FF               	movwf	btemp+1
   335  07A7  3080               	movlw	128
   336  07A8  027F               	subwf	btemp+1,w
   337  07A9  1D03               	skipz
   338  07AA  2FAD               	goto	u35
   339  07AB  3030               	movlw	48
   340  07AC  0273               	subwf	main@i,w
   341  07AD                     u35:
   342  07AD  1C03               	skipc
   343  07AE  2FB0               	goto	u31
   344  07AF  2FB1               	goto	u30
   345  07B0                     u31:
   346  07B0  2F7D               	goto	l628
   347  07B1                     u30:
   348  07B1                     l642:
   349                           
   350                           ;main.c: 34:             _delay((unsigned long)((1000)*(4000000/4000.0)));
   351  07B1  3006               	movlw	6
   352  07B2  00F2               	movwf	??_main+2
   353  07B3  3013               	movlw	19
   354  07B4  00F1               	movwf	??_main+1
   355  07B5  30AD               	movlw	173
   356  07B6  00F0               	movwf	??_main
   357  07B7                     u87:
   358  07B7  0BF0               	decfsz	??_main,f
   359  07B8  2FB7               	goto	u87
   360  07B9  0BF1               	decfsz	??_main+1,f
   361  07BA  2FB7               	goto	u87
   362  07BB  0BF2               	decfsz	??_main+2,f
   363  07BC  2FB7               	goto	u87
   364  07BD  2FBE               	nop2
   365  07BE                     l644:
   366                           
   367                           ;main.c: 35:             t=0;
   368  07BE  01F7               	clrf	main@t
   369  07BF                     l646:
   370                           
   371                           ;main.c: 36:             for(int i=0;i<48;i++)
   372  07BF  01F5               	clrf	main@i_38
   373  07C0  01F6               	clrf	main@i_38+1
   374  07C1                     l652:
   375                           
   376                           ;main.c: 37:             {;main.c: 38:                 PORTB = (8>>t);
   377  07C1  0A77               	incf	main@t,w
   378  07C2  00F0               	movwf	??_main
   379  07C3  3008               	movlw	8
   380  07C4  00F1               	movwf	??_main+1
   381  07C5  3000               	movlw	0
   382  07C6  00F2               	movwf	??_main+2
   383  07C7  2FCB               	goto	u44
   384  07C8                     u45:
   385  07C8  0D72               	rlf	??_main+2,w
   386  07C9  0CF2               	rrf	??_main+2,f
   387  07CA  0CF1               	rrf	??_main+1,f
   388  07CB                     u44:
   389  07CB  0BF0               	decfsz	??_main,f
   390  07CC  2FC8               	goto	u45
   391  07CD  0871               	movf	??_main+1,w
   392  07CE  1283               	bcf	3,5	;RP0=0, select bank0
   393  07CF  1303               	bcf	3,6	;RP1=0, select bank0
   394  07D0  0086               	movwf	6	;volatile
   395                           
   396                           ;main.c: 39:                 t++;
   397  07D1  3001               	movlw	1
   398  07D2  00F0               	movwf	??_main
   399  07D3  0870               	movf	??_main,w
   400  07D4  07F7               	addwf	main@t,f
   401  07D5                     l654:
   402                           
   403                           ;main.c: 40:                 _delay((unsigned long)((70)*(4000000/4000.0)));
   404  07D5  305B               	movlw	91
   405  07D6  00F1               	movwf	??_main+1
   406  07D7  30E7               	movlw	231
   407  07D8  00F0               	movwf	??_main
   408  07D9                     u97:
   409  07D9  0BF0               	decfsz	??_main,f
   410  07DA  2FD9               	goto	u97
   411  07DB  0BF1               	decfsz	??_main+1,f
   412  07DC  2FD9               	goto	u97
   413  07DD  2FDE               	nop2
   414  07DE                     l656:
   415                           
   416                           ;main.c: 41:                 if(t==4)
   417  07DE  3004               	movlw	4
   418  07DF  0677               	xorwf	main@t,w
   419  07E0  1D03               	btfss	3,2
   420  07E1  2FE3               	goto	u51
   421  07E2  2FE4               	goto	u50
   422  07E3                     u51:
   423  07E3  2FE5               	goto	l660
   424  07E4                     u50:
   425  07E4                     l658:
   426                           
   427                           ;main.c: 42:                     t=0;
   428  07E4  01F7               	clrf	main@t
   429  07E5                     l660:
   430                           
   431                           ;main.c: 43:             }
   432  07E5  3001               	movlw	1
   433  07E6  07F5               	addwf	main@i_38,f
   434  07E7  1803               	skipnc
   435  07E8  0AF6               	incf	main@i_38+1,f
   436  07E9  3000               	movlw	0
   437  07EA  07F6               	addwf	main@i_38+1,f
   438  07EB                     l662:
   439  07EB  0876               	movf	main@i_38+1,w
   440  07EC  3A80               	xorlw	128
   441  07ED  00FF               	movwf	btemp+1
   442  07EE  3080               	movlw	128
   443  07EF  027F               	subwf	btemp+1,w
   444  07F0  1D03               	skipz
   445  07F1  2FF4               	goto	u65
   446  07F2  3030               	movlw	48
   447  07F3  0275               	subwf	main@i_38,w
   448  07F4                     u65:
   449  07F4  1C03               	skipc
   450  07F5  2FF7               	goto	u61
   451  07F6  2FF8               	goto	u60
   452  07F7                     u61:
   453  07F7  2FC1               	goto	l652
   454  07F8                     u60:
   455  07F8  2F7B               	goto	l622
   456  07F9  120A  118A  2800   	ljmp	start
   457  07FC                     __end_of_main:
   458  007E                     btemp	set	126	;btemp
   459  007E                     wtemp0	set	126
   460                           
   461                           	psect	config
   462                           
   463                           ;Config register CONFIG @ 0x2007
   464                           ;	Oscillator Selection bits
   465                           ;	FOSC = XT, XT oscillator
   466                           ;	Watchdog Timer Enable bit
   467                           ;	WDTE = OFF, WDT disabled
   468                           ;	Power-up Timer Enable bit
   469                           ;	PWRTE = ON, PWRT enabled
   470                           ;	Brown-out Reset Enable bit
   471                           ;	BOREN = ON, BOR enabled
   472                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   473                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   474                           ;	Data EEPROM Memory Code Protection bit
   475                           ;	CPD = OFF, Data EEPROM code protection off
   476                           ;	Flash Program Memory Write Enable bits
   477                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   478                           ;	In-Circuit Debugger Mode bit
   479                           ;	DEBUG = 0x1, unprogrammed default
   480                           ;	Flash Program Memory Code Protection bit
   481                           ;	CP = OFF, Code protection off
   482  2007                     	org	8199
   483  2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0     120
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Fri Oct 23 21:04:06 2020

                     u20 079D                       u21 079C                       u30 07B1  
                     u14 0783                       u31 07B0                       u15 0781  
                     u50 07E4                       u51 07E3                       u35 07AD  
                     u60 07F8                       u44 07CB                       u61 07F7  
                     u45 07C8                       u65 07F4                       u77 078E  
                     u87 07B7                       u97 07D9                      l620 077A  
                    l630 078A                      l622 077B                      l614 0772  
                    l640 07A4                      l632 0793                      l616 0776  
                    l642 07B1                      l634 0797                      l618 0777  
                    l660 07E5                      l652 07C1                      l644 07BE  
                    l636 079D                      l628 077D                      l662 07EB  
                    l654 07D5                      l646 07BF                      l638 079E  
                    l656 07DE                      l658 07E4                     _main 0772  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _PORTB 0006                    _TRISA 0085                    _TRISB 0086  
                  main@i 0073                    main@t 0077                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             __pmaintext 0772     end_of_initialization 07FC      start_initialization 07FC  
              ___latbits 0002            __size_of_main 008A                 main@i_38 0075  
