

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Fri Oct 16 05:14:45 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168                           
   169                           	psect	idataBANK0
   170  0792                     __pidataBANK0:
   171                           
   172                           ;initializer for main@F879
   173  0792  34FC               	retlw	252
   174  0793  3460               	retlw	96
   175  0794  34DA               	retlw	218
   176  0795  34F2               	retlw	242
   177  0796  3466               	retlw	102
   178  0797  34B6               	retlw	182
   179  0798  34BE               	retlw	190
   180  0799  34E0               	retlw	224
   181  079A  34FE               	retlw	254
   182  079B  34F6               	retlw	246
   183  0006                     _PORTB	set	6
   184  0086                     _TRISB	set	134
   185                           
   186                           	psect	cinit
   187  07EE                     start_initialization:	
   188                           ; #config settings
   189                           
   190  07EE                     __initialization:
   191                           
   192                           ; Initialize objects allocated to BANK0
   193  07EE  1383               	bcf	3,7	;select IRP bank0
   194  07EF  3035               	movlw	low (__pdataBANK0+10)
   195  07F0  00FD               	movwf	btemp+-1
   196  07F1  3007               	movlw	high __pidataBANK0
   197  07F2  00FE               	movwf	btemp
   198  07F3  3092               	movlw	low __pidataBANK0
   199  07F4  00FF               	movwf	btemp+1
   200  07F5  302B               	movlw	low __pdataBANK0
   201  07F6  0084               	movwf	4
   202  07F7  120A  118A  27A0  120A  118A  	fcall	init_ram0
   203  07FC                     end_of_initialization:	
   204                           ;End of C runtime variable initialization code
   205                           
   206  07FC                     __end_of__initialization:
   207  07FC  0183               	clrf	3
   208  07FD  120A  118A  2FAF   	ljmp	_main	;jump to C main() function
   209                           
   210                           	psect	dataBANK0
   211  002B                     __pdataBANK0:
   212  002B                     main@F879:
   213  002B                     	ds	10
   214                           
   215                           	psect	inittext
   216  079C                     init_fetch0:	
   217                           ;	Called with low address in FSR and high address in W
   218                           
   219  079C  087E               	movf	btemp,w
   220  079D  008A               	movwf	10
   221  079E  087F               	movf	btemp+1,w
   222  079F  0082               	movwf	2
   223  07A0                     init_ram0:	
   224                           ;Called with:
   225                           ;	high address of idata address in btemp 
   226                           ;	low address of idata address in btemp+1 
   227                           ;	low address of data in FSR
   228                           ;	high address + 1 of data in btemp-1
   229                           
   230  07A0  120A  118A  279C  120A  118A  	fcall	init_fetch0
   231  07A5  0080               	movwf	0
   232  07A6  0A84               	incf	4,f
   233  07A7  0804               	movf	4,w
   234  07A8  067D               	xorwf	btemp+-1,w
   235  07A9  1903               	btfsc	3,2
   236  07AA  3400               	retlw	0
   237  07AB  0AFF               	incf	btemp+1,f
   238  07AC  1903               	btfsc	3,2
   239  07AD  0AFE               	incf	btemp,f
   240  07AE  2FA0               	goto	init_ram0
   241                           
   242                           	psect	cstackCOMMON
   243  0070                     __pcstackCOMMON:
   244  0070                     ?_main:
   245  0070                     ??_main:	
   246                           ; 1 bytes @ 0x0
   247                           
   248                           
   249                           ; 1 bytes @ 0x0
   250  0070                     	ds	4
   251                           
   252                           	psect	cstackBANK0
   253  0020                     __pcstackBANK0:
   254  0020                     main@segment:
   255                           
   256                           ; 10 bytes @ 0x0
   257  0020                     	ds	10
   258  002A                     main@i:
   259                           
   260                           ; 1 bytes @ 0xA
   261  002A                     	ds	1
   262                           
   263                           	psect	maintext
   264  07AF                     __pmaintext:	
   265 ;;
   266 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   267 ;;
   268 ;; *************** function _main *****************
   269 ;; Defined at:
   270 ;;		line 39 in file "main.c"
   271 ;; Parameters:    Size  Location     Type
   272 ;;		None
   273 ;; Auto vars:     Size  Location     Type
   274 ;;  i               1   10[BANK0 ] unsigned char 
   275 ;;  segment        10    0[BANK0 ] unsigned char [10]
   276 ;; Return value:  Size  Location     Type
   277 ;;                  1    wreg      void 
   278 ;; Registers used:
   279 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   280 ;; Tracked objects:
   281 ;;		On entry : B00/0
   282 ;;		On exit  : 0/0
   283 ;;		Unchanged: 0/0
   284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   285 ;;      Params:         0       0       0       0       0
   286 ;;      Locals:         0      11       0       0       0
   287 ;;      Temps:          4       0       0       0       0
   288 ;;      Totals:         4      11       0       0       0
   289 ;;Total ram usage:       15 bytes
   290 ;; This function calls:
   291 ;;		Nothing
   292 ;; This function is called by:
   293 ;;		Startup code after reset
   294 ;; This function uses a non-reentrant model
   295 ;;
   296                           
   297                           
   298                           ;psect for function _main
   299  07AF                     _main:
   300  07AF                     l630:	
   301                           ;incstack = 0
   302                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0]
   303                           
   304                           
   305                           ;main.c: 41:     uint8_t segment[10]={0xFC,0x60,0xDA,0xF2,0x66,0xB6,0xBE,0xE0,0xFE,0xF6}
      +                          ;
   306  07AF  3020               	movlw	main@segment& (0+255)
   307  07B0  0084               	movwf	4
   308  07B1  302B               	movlw	low main@F879
   309  07B2  00F0               	movwf	??_main
   310  07B3  0804               	movf	4,w
   311  07B4  00F1               	movwf	??_main+1
   312  07B5  300A               	movlw	10
   313  07B6  00F2               	movwf	??_main+2
   314  07B7                     u30:
   315  07B7  0870               	movf	??_main,w
   316  07B8  0084               	movwf	4
   317  07B9  1383               	bcf	3,7	;select IRP bank0
   318  07BA  0800               	movf	0,w
   319  07BB  00F3               	movwf	??_main+3
   320  07BC  0AF0               	incf	??_main,f
   321  07BD  0871               	movf	??_main+1,w
   322  07BE  0084               	movwf	4
   323  07BF  0873               	movf	??_main+3,w
   324  07C0  0080               	movwf	0
   325  07C1  0AF1               	incf	??_main+1,f
   326  07C2  0BF2               	decfsz	??_main+2,f
   327  07C3  2FB7               	goto	u30
   328  07C4                     l632:
   329                           
   330                           ;main.c: 43:     TRISB=0;
   331  07C4  1683               	bsf	3,5	;RP0=1, select bank1
   332  07C5  1303               	bcf	3,6	;RP1=0, select bank1
   333  07C6  0186               	clrf	6	;volatile
   334  07C7                     l634:
   335                           
   336                           ;main.c: 46:     PORTB=0;
   337  07C7  1283               	bcf	3,5	;RP0=0, select bank0
   338  07C8  1303               	bcf	3,6	;RP1=0, select bank0
   339  07C9  0186               	clrf	6	;volatile
   340  07CA                     l636:
   341                           
   342                           ;main.c: 48:     {;main.c: 49:         for(uint8_t i=0;i<10;i++)
   343  07CA  01AA               	clrf	main@i
   344  07CB                     l642:
   345                           
   346                           ;main.c: 50:         {;main.c: 51:             PORTB=segment[i];
   347  07CB  082A               	movf	main@i,w
   348  07CC  3E20               	addlw	(low (main@segment| 0))& (0+255)
   349  07CD  0084               	movwf	4
   350  07CE  1383               	bcf	3,7	;select IRP bank0
   351  07CF  0800               	movf	0,w
   352  07D0  0086               	movwf	6	;volatile
   353  07D1                     l644:
   354                           
   355                           ;main.c: 52:             _delay((unsigned long)((600)*(4000000/4000.0)));
   356  07D1  3004               	movlw	4
   357  07D2  00F2               	movwf	??_main+2
   358  07D3  300C               	movlw	12
   359  07D4  00F1               	movwf	??_main+1
   360  07D5  3033               	movlw	51
   361  07D6  00F0               	movwf	??_main
   362  07D7                     u57:
   363  07D7  0BF0               	decfsz	??_main,f
   364  07D8  2FD7               	goto	u57
   365  07D9  0BF1               	decfsz	??_main+1,f
   366  07DA  2FD7               	goto	u57
   367  07DB  0BF2               	decfsz	??_main+2,f
   368  07DC  2FD7               	goto	u57
   369  07DD  2FDE               	nop2
   370  07DE                     l646:
   371                           
   372                           ;main.c: 53:         }
   373  07DE  3001               	movlw	1
   374  07DF  00F0               	movwf	??_main
   375  07E0  0870               	movf	??_main,w
   376  07E1  1283               	bcf	3,5	;RP0=0, select bank0
   377  07E2  1303               	bcf	3,6	;RP1=0, select bank0
   378  07E3  07AA               	addwf	main@i,f
   379  07E4                     l648:
   380  07E4  300A               	movlw	10
   381  07E5  022A               	subwf	main@i,w
   382  07E6  1C03               	skipc
   383  07E7  2FE9               	goto	u41
   384  07E8  2FEA               	goto	u40
   385  07E9                     u41:
   386  07E9  2FCB               	goto	l642
   387  07EA                     u40:
   388  07EA  2FCA               	goto	l636
   389  07EB  120A  118A  2800   	ljmp	start
   390  07EE                     __end_of_main:
   391  007E                     btemp	set	126	;btemp
   392  007E                     wtemp0	set	126
   393                           
   394                           	psect	config
   395                           
   396                           ;Config register CONFIG @ 0x2007
   397                           ;	Oscillator Selection bits
   398                           ;	FOSC = XT, XT oscillator
   399                           ;	Watchdog Timer Enable bit
   400                           ;	WDTE = OFF, WDT disabled
   401                           ;	Power-up Timer Enable bit
   402                           ;	PWRTE = ON, PWRT enabled
   403                           ;	Brown-out Reset Enable bit
   404                           ;	BOREN = ON, BOR enabled
   405                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   406                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   407                           ;	Data EEPROM Memory Code Protection bit
   408                           ;	CPD = OFF, Data EEPROM code protection off
   409                           ;	Flash Program Memory Write Enable bits
   410                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   411                           ;	In-Circuit Debugger Mode bit
   412                           ;	DEBUG = 0x1, unprogrammed default
   413                           ;	Flash Program Memory Code Protection bit
   414                           ;	CP = OFF, Code protection off
   415  2007                     	org	8199
   416  2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80     11      21
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0      92
                                              0 COMMON     4     4      0
                                              0 BANK0     11    11      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      15       5       26.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      4       4       1       28.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      19      12        0.0%
ABS                  0      0      19       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Fri Oct 16 05:14:45 2020

                      pc 0002                       u30 07B7                       u40 07EA  
                     u41 07E9                       u57 07D7                       fsr 0004  
                    l630 07AF                      l632 07C4                      l642 07CB  
                    l634 07C7                      l644 07D1                      l636 07CA  
                    l646 07DE                      l648 07E4                      fsr0 0004  
                    indf 0000              main@segment 0020                     _main 07AF  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _PORTB 0006                    _TRISB 0086                    main@i 002A  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07EE             __end_of_main 07EE                   ??_main 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 0792  
             __pmaintext 07AF     end_of_initialization 07FC      start_initialization 07EE  
             init_fetch0 079C              __pdataBANK0 002B                ___latbits 0002  
          __pcstackBANK0 0020            __size_of_main 003F                 main@F879 002B  
               init_ram0 07A0  
