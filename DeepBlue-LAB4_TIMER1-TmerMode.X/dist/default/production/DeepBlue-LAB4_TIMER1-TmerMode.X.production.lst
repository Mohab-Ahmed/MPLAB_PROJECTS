

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sat Oct 24 19:29:44 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  000E                     _TMR1	set	14
   169  0060                     _TMR1IF	set	96
   170  005E                     _PEIE	set	94
   171  005F                     _GIE	set	95
   172  0030                     _RB0	set	48
   173  0080                     _TMR1ON	set	128
   174  0081                     _TMR1CS	set	129
   175  0084                     _T1CKPS0	set	132
   176  0085                     _T1CKPS1	set	133
   177  0086                     _TRISB	set	134
   178  0460                     _TMR1IE	set	1120
   179                           
   180                           	psect	cinit
   181  000F                     start_initialization:	
   182                           ; #config settings
   183                           
   184  000F                     __initialization:
   185                           
   186                           ; Clear objects allocated to COMMON
   187  000F  01F3               	clrf	__pbssCOMMON& (0+127)
   188  0010                     end_of_initialization:	
   189                           ;End of C runtime variable initialization code
   190                           
   191  0010                     __end_of__initialization:
   192  0010  0183               	clrf	3
   193  0011  120A  118A  2833   	ljmp	_main	;jump to C main() function
   194                           
   195                           	psect	bssCOMMON
   196  0073                     __pbssCOMMON:
   197  0073                     _count:
   198  0073                     	ds	1
   199                           
   200                           	psect	cstackCOMMON
   201  0070                     __pcstackCOMMON:
   202  0070                     ?_initialize_timer:
   203  0070                     ?_main:	
   204                           ; 1 bytes @ 0x0
   205                           
   206  0070                     ?_ISR:	
   207                           ; 1 bytes @ 0x0
   208                           
   209  0070                     ??_ISR:	
   210                           ; 1 bytes @ 0x0
   211                           
   212                           
   213                           ; 1 bytes @ 0x0
   214  0070                     	ds	3
   215  0073                     ??_initialize_timer:
   216  0073                     ??_main:	
   217                           ; 1 bytes @ 0x3
   218                           
   219                           
   220                           	psect	maintext
   221  0033                     __pmaintext:	
   222                           ; 1 bytes @ 0x3
   223 ;;
   224 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   225 ;;
   226 ;; *************** function _main *****************
   227 ;; Defined at:
   228 ;;		line 74 in file "main.c"
   229 ;; Parameters:    Size  Location     Type
   230 ;;		None
   231 ;; Auto vars:     Size  Location     Type
   232 ;;		None
   233 ;; Return value:  Size  Location     Type
   234 ;;                  1    wreg      void 
   235 ;; Registers used:
   236 ;;		status,2, status,0, pclath, cstack
   237 ;; Tracked objects:
   238 ;;		On entry : B00/0
   239 ;;		On exit  : 0/0
   240 ;;		Unchanged: 0/0
   241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   242 ;;      Params:         0       0       0       0       0
   243 ;;      Locals:         0       0       0       0       0
   244 ;;      Temps:          0       0       0       0       0
   245 ;;      Totals:         0       0       0       0       0
   246 ;;Total ram usage:        0 bytes
   247 ;; Hardware stack levels required when called:    2
   248 ;; This function calls:
   249 ;;		_initialize_timer
   250 ;; This function is called by:
   251 ;;		Startup code after reset
   252 ;; This function uses a non-reentrant model
   253 ;;
   254                           
   255                           
   256                           ;psect for function _main
   257  0033                     _main:
   258  0033                     l636:	
   259                           ;incstack = 0
   260                           ; Regs used in _main: [status,2+status,0+pclath+cstack]
   261                           
   262                           
   263                           ;main.c: 75:     TRISB=0;
   264  0033  1683               	bsf	3,5	;RP0=1, select bank1
   265  0034  1303               	bcf	3,6	;RP1=0, select bank1
   266  0035  0186               	clrf	6	;volatile
   267  0036                     l638:
   268                           
   269                           ;main.c: 76:     RB0=0;
   270  0036  1283               	bcf	3,5	;RP0=0, select bank0
   271  0037  1303               	bcf	3,6	;RP1=0, select bank0
   272  0038  1006               	bcf	6,0	;volatile
   273  0039                     l640:
   274                           
   275                           ;main.c: 77:     initialize_timer();
   276  0039  120A  118A  204A  120A  118A  	fcall	_initialize_timer
   277  003E                     l642:
   278                           
   279                           ;main.c: 78:     GIE=1;
   280  003E  178B               	bsf	11,7	;volatile
   281  003F                     l644:
   282                           
   283                           ;main.c: 79:     PEIE=1;
   284  003F  170B               	bsf	11,6	;volatile
   285  0040                     l646:
   286                           
   287                           ;main.c: 80:     TMR1IF=0;
   288  0040  1283               	bcf	3,5	;RP0=0, select bank0
   289  0041  1303               	bcf	3,6	;RP1=0, select bank0
   290  0042  100C               	bcf	12,0	;volatile
   291  0043                     l648:
   292                           
   293                           ;main.c: 81:     TMR1IE=1;
   294  0043  1683               	bsf	3,5	;RP0=1, select bank1
   295  0044  1303               	bcf	3,6	;RP1=0, select bank1
   296  0045  140C               	bsf	12,0	;volatile
   297  0046                     l32:	
   298                           ;main.c: 83:     while(1)
   299                           
   300  0046                     l33:	
   301                           ;main.c: 84:     {;main.c: 86:     }
   302                           
   303  0046  2846               	goto	l32
   304  0047  120A  118A  280C   	ljmp	start
   305  004A                     __end_of_main:
   306                           
   307                           	psect	text1
   308  004A                     __ptext1:	
   309 ;; *************** function _initialize_timer *****************
   310 ;; Defined at:
   311 ;;		line 66 in file "main.c"
   312 ;; Parameters:    Size  Location     Type
   313 ;;		None
   314 ;; Auto vars:     Size  Location     Type
   315 ;;		None
   316 ;; Return value:  Size  Location     Type
   317 ;;                  1    wreg      void 
   318 ;; Registers used:
   319 ;;		None
   320 ;; Tracked objects:
   321 ;;		On entry : 0/0
   322 ;;		On exit  : 0/0
   323 ;;		Unchanged: 0/0
   324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   325 ;;      Params:         0       0       0       0       0
   326 ;;      Locals:         0       0       0       0       0
   327 ;;      Temps:          0       0       0       0       0
   328 ;;      Totals:         0       0       0       0       0
   329 ;;Total ram usage:        0 bytes
   330 ;; Hardware stack levels used:    1
   331 ;; Hardware stack levels required when called:    1
   332 ;; This function calls:
   333 ;;		Nothing
   334 ;; This function is called by:
   335 ;;		_main
   336 ;; This function uses a non-reentrant model
   337 ;;
   338                           
   339                           
   340                           ;psect for function _initialize_timer
   341  004A                     _initialize_timer:
   342  004A                     l634:	
   343                           ;incstack = 0
   344                           ; Regs used in _initialize_timer: []
   345                           
   346                           
   347                           ;main.c: 68:     TMR1=15536;
   348  004A  303C               	movlw	60
   349  004B  1283               	bcf	3,5	;RP0=0, select bank0
   350  004C  1303               	bcf	3,6	;RP1=0, select bank0
   351  004D  008F               	movwf	15	;volatile
   352  004E  30B0               	movlw	176
   353  004F  008E               	movwf	14	;volatile
   354                           
   355                           ;main.c: 69:     T1CKPS1=0;
   356  0050  1290               	bcf	16,5	;volatile
   357                           
   358                           ;main.c: 70:     T1CKPS0=0;
   359  0051  1210               	bcf	16,4	;volatile
   360                           
   361                           ;main.c: 71:     TMR1CS=0;
   362  0052  1090               	bcf	16,1	;volatile
   363                           
   364                           ;main.c: 72:     TMR1ON=1;
   365  0053  1410               	bsf	16,0	;volatile
   366  0054                     l27:
   367  0054  0008               	return
   368  0055                     __end_of_initialize_timer:
   369                           
   370                           	psect	text2
   371  0014                     __ptext2:	
   372 ;; *************** function _ISR *****************
   373 ;; Defined at:
   374 ;;		line 90 in file "main.c"
   375 ;; Parameters:    Size  Location     Type
   376 ;;		None
   377 ;; Auto vars:     Size  Location     Type
   378 ;;		None
   379 ;; Return value:  Size  Location     Type
   380 ;;                  1    wreg      void 
   381 ;; Registers used:
   382 ;;		wreg, status,2, status,0
   383 ;; Tracked objects:
   384 ;;		On entry : 0/0
   385 ;;		On exit  : 0/0
   386 ;;		Unchanged: 0/0
   387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   388 ;;      Params:         0       0       0       0       0
   389 ;;      Locals:         0       0       0       0       0
   390 ;;      Temps:          3       0       0       0       0
   391 ;;      Totals:         3       0       0       0       0
   392 ;;Total ram usage:        3 bytes
   393 ;; Hardware stack levels used:    1
   394 ;; This function calls:
   395 ;;		Nothing
   396 ;; This function is called by:
   397 ;;		Interrupt level 1
   398 ;; This function uses a non-reentrant model
   399 ;;
   400                           
   401                           
   402                           ;psect for function _ISR
   403  0014                     _ISR:
   404  0014                     i1l650:
   405                           
   406                           ;main.c: 92:     if(TMR1IF)
   407  0014  1283               	bcf	3,5	;RP0=0, select bank0
   408  0015  1303               	bcf	3,6	;RP1=0, select bank0
   409  0016  1C0C               	btfss	12,0	;volatile
   410  0017  2819               	goto	u1_21
   411  0018  281A               	goto	u1_20
   412  0019                     u1_21:
   413  0019  282C               	goto	i1l42
   414  001A                     u1_20:
   415  001A                     i1l652:
   416                           
   417                           ;main.c: 93:     {;main.c: 94:         TMR1=15536;
   418  001A  303C               	movlw	60
   419  001B  008F               	movwf	15	;volatile
   420  001C  30B0               	movlw	176
   421  001D  008E               	movwf	14	;volatile
   422  001E                     i1l654:
   423                           
   424                           ;main.c: 95:         count++;
   425  001E  3001               	movlw	1
   426  001F  00F0               	movwf	??_ISR
   427  0020  0870               	movf	??_ISR,w
   428  0021  07F3               	addwf	_count,f
   429                           
   430                           ;main.c: 96:         if(count==20)
   431  0022  3014               	movlw	20
   432  0023  0673               	xorwf	_count,w
   433  0024  1D03               	btfss	3,2
   434  0025  2827               	goto	u2_21
   435  0026  2828               	goto	u2_20
   436  0027                     u2_21:
   437  0027  282B               	goto	i1l660
   438  0028                     u2_20:
   439  0028                     i1l656:
   440                           
   441                           ;main.c: 97:         {;main.c: 98:            RB0=~RB0;
   442  0028  3001               	movlw	1
   443  0029  0686               	xorwf	6,f
   444  002A                     i1l658:
   445                           
   446                           ;main.c: 99:            count=0;
   447  002A  01F3               	clrf	_count
   448  002B                     i1l660:
   449                           
   450                           ;main.c: 101:         TMR1IF=0;
   451  002B  100C               	bcf	12,0	;volatile
   452  002C                     i1l42:
   453  002C  0872               	movf	??_ISR+2,w
   454  002D  008A               	movwf	10
   455  002E  0E71               	swapf	??_ISR+1,w
   456  002F  0083               	movwf	3
   457  0030  0EFE               	swapf	btemp,f
   458  0031  0E7E               	swapf	btemp,w
   459  0032  0009               	retfie
   460  0033                     __end_of_ISR:
   461  007E                     btemp	set	126	;btemp
   462  007E                     wtemp0	set	126
   463                           
   464                           	psect	intentry
   465  0004                     __pintentry:	
   466                           ;incstack = 0
   467                           ; Regs used in _ISR: [wreg+status,2+status,0]
   468                           
   469  0004                     interrupt_function:
   470  007E                     saved_w	set	btemp
   471  0004  00FE               	movwf	btemp
   472  0005  0E03               	swapf	3,w
   473  0006  00F1               	movwf	??_ISR+1
   474  0007  080A               	movf	10,w
   475  0008  00F2               	movwf	??_ISR+2
   476  0009  120A  118A  2814   	ljmp	_ISR
   477                           
   478                           	psect	config
   479                           
   480                           ;Config register CONFIG @ 0x2007
   481                           ;	Oscillator Selection bits
   482                           ;	FOSC = XT, XT oscillator
   483                           ;	Watchdog Timer Enable bit
   484                           ;	WDTE = OFF, WDT disabled
   485                           ;	Power-up Timer Enable bit
   486                           ;	PWRTE = ON, PWRT enabled
   487                           ;	Brown-out Reset Enable bit
   488                           ;	BOREN = ON, BOR enabled
   489                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   490                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   491                           ;	Data EEPROM Memory Code Protection bit
   492                           ;	CPD = OFF, Data EEPROM code protection off
   493                           ;	Flash Program Memory Write Enable bits
   494                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   495                           ;	In-Circuit Debugger Mode bit
   496                           ;	DEBUG = 0x1, unprogrammed default
   497                           ;	Flash Program Memory Code Protection bit
   498                           ;	CP = OFF, Code protection off
   499  2007                     	org	8199
   500  2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                   _initialize_timer
 ---------------------------------------------------------------------------------
 (1) _initialize_timer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialize_timer

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       4      12        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sat Oct 24 19:29:44 2020

                       l32 0046                         l33 0046                         l27 0054  
                      l640 0039                        l634 004A                        l642 003E  
                      l644 003F                        l636 0033                        l646 0040  
                      l638 0036                        l648 0043                        _GIE 005F  
                      _RB0 0030                        _ISR 0014                       ?_ISR 0070  
                     _PEIE 005E                       i1l42 002C                       _TMR1 000E  
                     u1_20 001A                       u1_21 0019                       u2_20 0028  
                     u2_21 0027                       _main 0033                       btemp 007E  
                     start 000C                      ??_ISR 0070                      ?_main 0070  
                    i1l650 0014                      i1l660 002B                      i1l652 001A  
                    i1l654 001E                      i1l656 0028                      i1l658 002A  
                    _TRISB 0086                      _count 0073                      pclath 000A  
                    status 0003                      wtemp0 007E            __initialization 000F  
             __end_of_main 004A                     ??_main 0073                     _TMR1IE 0460  
                   _TMR1IF 0060                     _TMR1CS 0081                     _TMR1ON 0080  
        ?_initialize_timer 0070         ??_initialize_timer 0073                     saved_w 007E  
  __end_of__initialization 0010             __pcstackCOMMON 0070                 __pmaintext 0033  
               __pintentry 0004                    _T1CKPS0 0084                    _T1CKPS1 0085  
                  __ptext1 004A                    __ptext2 0014               __size_of_ISR 001F  
     end_of_initialization 0010  __size_of_initialize_timer 000B        start_initialization 000F  
              __end_of_ISR 0033                __pbssCOMMON 0073                  ___latbits 0002  
         _initialize_timer 004A          interrupt_function 0004              __size_of_main 0017  
                 intlevel1 0000   __end_of_initialize_timer 0055  
